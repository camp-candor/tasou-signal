---
import { Icon } from 'astro-icon/components';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Image from '~/components/common/Image.astro';
import type { Headline as HeadlineProps, Item, Image as ImageType, Widget } from '~/types';

export interface Props extends Widget {
  headline?: HeadlineProps;
  items?: Array<Item>;
  image?: string | ImageType;
}

const {
  headline,
  items = [],
  image = await Astro.slots.render('image'),
  id,
  isDark = false,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8" bg={bg}>
  <div class="relative">
    <div class="flex items-center justify-between">
      <div class="max-w-3xl">
        <Headline {...headline} />
      </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-16">
      <div class="md:self-center">
        {
          items.map(({ title, description, icon }, index) => (
            <div class="flex">
              <div class="flex flex-col items-center mr-4 rtl:mr-0 rtl:ml-4">
                <div
                  class:list={[
                    'flex items-center justify-center w-10 h-10 rounded-full border-2',
                    {
                      'border-primary dark:border-blue-600': index !== 0,
                      'bg-primary dark:bg-blue-600 text-white': index === 0,
                    },
                  ]}
                >
                  <Icon name={icon} class="w-6 h-6" />
                </div>
                {index < items.length - 1 && <div class="w-px h-full bg-gray-300 dark:bg-slate-500" />}
              </div>
              <div class="pt-1 pb-8">
                <p class="mb-2 text-xl font-bold">{title}</p>
                <p class="text-muted dark:text-slate-400" set:html={description} />
              </div>
            </div>
          ))
        }
      </div>
      <div aria-hidden="true" class="mt-10 md:mt-0">
        {
          image && (
            <div class="relative mx-auto max-w-4xl">
              <Image
                class="rounded-lg shadow-lg bg-gray-400 dark:bg-slate-700"
                width={500}
                height={500}
                src={typeof image === 'string' ? image : image.src}
                alt={typeof image === 'object' && image.alt ? image.alt : ''}
              />
            </div>
          )
        }
      </div>
    </div>
  </div>
</WidgetWrapper>
