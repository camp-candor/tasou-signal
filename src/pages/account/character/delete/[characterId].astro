---
import Layout from '../../../../layouts/Layout.astro';

const { characterId } = Astro.params;
const auth = Astro.locals.auth();
const token = await auth.getToken();

// In a real app, you would fetch character details here to display the name
const characterName = `Character #${characterId}`; 
---
<Layout title="Confirm Character Deletion">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-md mx-auto bg-white shadow-md rounded-lg p-6 text-center">
        <h1 class="text-2xl font-bold mb-4 text-red-600">Confirm Deletion</h1>
        <p class="text-gray-700 mb-6">
            Are you sure you want to delete <strong>{characterName}</strong>? This action is irreversible.
        </p>
        <div class="flex justify-center space-x-4">
            <a href="/account/profile" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">
                Cancel
            </a>
            <button id="delete-btn" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
                Confirm Deletion
            </button>
        </div>
        <p id="feedback" class="text-sm mt-4"></p>
    </div>
  </main>

  <script define:vars={{ token, characterId }}>
    document.getElementById('delete-btn').addEventListener('click', async () => {
        const feedbackEl = document.getElementById('feedback');
        feedbackEl.textContent = 'Deleting character...';
        feedbackEl.style.color = 'black';

        try {
            // This is a placeholder URL. Replace with your actual Game API endpoint.
            const response = await fetch(`https://game-api.yourdomain.com/api/character/delete/${characterId}`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });

            if (!response.ok) {
                 // Mocking a failed response for demonstration
                throw new Error(`Server responded with status: ${response.status}`);
            }

            // Mocking a successful response for demonstration
            feedbackEl.textContent = 'Character deleted successfully! Redirecting...';
            feedbackEl.style.color = 'green';

            setTimeout(() => {
                window.location.href = '/account/profile';
            }, 2000);

        } catch (error) {
            feedbackEl.textContent = `Error: This is a mock API. ${error.message}`;
            feedbackEl.style.color = 'red';
        }
    });
  </script>
</Layout>